import { useState } from "react";
import { Header } from "@/components/Header";
import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Badge } from "@/components/ui/badge";
import { Avatar, AvatarFallback } from "@/components/ui/avatar";
import { 
  Heart, 
  MessageCircle, 
  Share2, 
  Plus, 
  Search,
  TrendingUp,
  Coins,
  Camera
} from "lucide-react";
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from "@/components/ui/dialog";

const Community = () => {
  const [posts, setPosts] = useState([
    {
      id: 1,
      author: "‡§∞‡§æ‡§Æ ‡§ï‡•Å‡§Æ‡§æ‡§∞",
      location: "‡§™‡§Ç‡§ú‡§æ‡§¨",
      time: "2 ‡§ò‡§Ç‡§ü‡•á ‡§™‡§π‡§≤‡•á",
      content: "‡§Æ‡•á‡§∞‡•á ‡§ó‡•á‡§π‡•Ç‡§Ç ‡§ï‡•Ä ‡§´‡§∏‡§≤ ‡§Æ‡•á‡§Ç ‡§™‡•Ä‡§≤‡•á ‡§ß‡§¨‡•ç‡§¨‡•á ‡§¶‡§ø‡§ñ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç‡•§ ‡§ï‡•ç‡§Ø‡§æ ‡§Ø‡§π ‡§ï‡•ã‡§à ‡§¨‡•Ä‡§Æ‡§æ‡§∞‡•Ä ‡§π‡•à? ‡§ï‡•É‡§™‡§Ø‡§æ ‡§∏‡•Å‡§ù‡§æ‡§µ ‡§¶‡•á‡§Ç‡•§",
      image: "üåæ",
      likes: 12,
      comments: 5,
      agriCreds: 25,
      category: "‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ"
    },
    {
      id: 2,
      author: "‡§∏‡•Å‡§®‡•Ä‡§§‡§æ ‡§¶‡•á‡§µ‡•Ä",
      location: "‡§π‡§∞‡§ø‡§Ø‡§æ‡§£‡§æ",
      time: "4 ‡§ò‡§Ç‡§ü‡•á ‡§™‡§π‡§≤‡•á",
      content: "‡§ú‡•à‡§µ‡§ø‡§ï ‡§ñ‡§æ‡§¶ ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡§æ ‡§Ü‡§∏‡§æ‡§® ‡§§‡§∞‡•Ä‡§ï‡§æ‡•§ ‡§ó‡•ã‡§¨‡§∞ + ‡§®‡•Ä‡§Æ ‡§ï‡•Ä ‡§™‡§§‡•ç‡§§‡•Ä + ‡§ó‡•Å‡§°‡§º ‡§Æ‡§ø‡§≤‡§æ‡§ï‡§∞ 15 ‡§¶‡§ø‡§® ‡§Æ‡•á‡§Ç ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§π‡•ã‡§§‡•Ä ‡§π‡•à‡•§",
      image: "üå±",
      likes: 28,
      comments: 8,
      agriCreds: 50,
      category: "‡§ü‡§ø‡§™‡•ç‡§∏"
    },
    {
      id: 3,
      author: "‡§Ö‡§ú‡§Ø ‡§∏‡§ø‡§Ç‡§π",
      location: "‡§â‡§§‡•ç‡§§‡§∞ ‡§™‡•ç‡§∞‡§¶‡•á‡§∂", 
      time: "6 ‡§ò‡§Ç‡§ü‡•á ‡§™‡§π‡§≤‡•á",
      content: "‡§°‡•ç‡§∞‡§ø‡§™ ‡§∏‡§ø‡§Ç‡§ö‡§æ‡§à ‡§≤‡§ó‡§æ‡§®‡•á ‡§ï‡•á ‡§¨‡§æ‡§¶ 40% ‡§™‡§æ‡§®‡•Ä ‡§ï‡•Ä ‡§¨‡§ö‡§§ ‡§π‡•Å‡§à‡•§ ‡§¨‡§π‡•Å‡§§ ‡§´‡§æ‡§Ø‡§¶‡•á‡§Æ‡§Ç‡§¶ ‡§π‡•à!",
      image: "üíß",
      likes: 35,
      comments: 12,
      agriCreds: 75,
      category: "‡§Ö‡§®‡•Å‡§≠‡§µ"
    }
  ]);

  const [newPost, setNewPost] = useState({
    content: "",
    category: "‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ"
  });

  const categories = ["‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ", "‡§ü‡§ø‡§™‡•ç‡§∏", "‡§Ö‡§®‡•Å‡§≠‡§µ", "‡§¨‡§æ‡§ú‡§æ‡§∞"];

  const handleLike = (postId: number) => {
    setPosts(posts.map(post => 
      post.id === postId 
        ? { ...post, likes: post.likes + 1 }
        : post
    ));
  };

  const addPost = () => {
    if (newPost.content.trim()) {
      const post = {
        id: posts.length + 1,
        author: "‡§Ü‡§™",
        location: "‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§•‡§æ‡§®",
        time: "‡§Ö‡§≠‡•Ä",
        content: newPost.content,
        image: "üìù",
        likes: 0,
        comments: 0,
        agriCreds: 10,
        category: newPost.category
      };
      setPosts([post, ...posts]);
      setNewPost({ content: "", category: "‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ" });
    }
  };

  return (
    <div className="min-h-screen bg-gradient-earth">
      <Header title="‡§∏‡§Æ‡•Å‡§¶‡§æ‡§Ø ‡§Æ‡§Ç‡§ö" />
      
      <div className="p-4 space-y-4">
        {/* Search and Filter */}
        <div className="flex gap-2">
          <div className="flex-1 relative">
            <Search className="absolute left-3 top-3 h-4 w-4 text-muted-foreground" />
            <Input placeholder="‡§™‡•ã‡§∏‡•ç‡§ü ‡§ñ‡•ã‡§ú‡•á‡§Ç..." className="pl-9" />
          </div>
          <Dialog>
            <DialogTrigger asChild>
              <Button className="bg-primary hover:bg-primary/90">
                <Plus className="h-4 w-4 mr-2" />
                ‡§™‡•ã‡§∏‡•ç‡§ü
              </Button>
            </DialogTrigger>
            <DialogContent>
              <DialogHeader>
                <DialogTitle>‡§®‡§à ‡§™‡•ã‡§∏‡•ç‡§ü ‡§≤‡§ø‡§ñ‡•á‡§Ç</DialogTitle>
              </DialogHeader>
              <div className="space-y-4">
                <div>
                  <label className="text-sm font-medium mb-2 block">‡§∂‡•ç‡§∞‡•á‡§£‡•Ä</label>
                  <select 
                    value={newPost.category}
                    onChange={(e) => setNewPost({...newPost, category: e.target.value})}
                    className="w-full p-2 border border-border rounded-md"
                  >
                    {categories.map(cat => (
                      <option key={cat} value={cat}>{cat}</option>
                    ))}
                  </select>
                </div>
                <Textarea
                  placeholder="‡§Ö‡§™‡§®‡§æ ‡§∏‡§µ‡§æ‡§≤ ‡§Ø‡§æ ‡§∏‡•Å‡§ù‡§æ‡§µ ‡§≤‡§ø‡§ñ‡•á‡§Ç..."
                  value={newPost.content}
                  onChange={(e) => setNewPost({...newPost, content: e.target.value})}
                  rows={4}
                />
                <div className="flex gap-2">
                  <Button variant="outline" className="flex-1">
                    <Camera className="h-4 w-4 mr-2" />
                    ‡§´‡•ã‡§ü‡•ã ‡§ú‡•ã‡§°‡§º‡•á‡§Ç
                  </Button>
                  <Button onClick={addPost} className="flex-1">
                    ‡§™‡•ã‡§∏‡•ç‡§ü ‡§ï‡§∞‡•á‡§Ç
                  </Button>
                </div>
              </div>
            </DialogContent>
          </Dialog>
        </div>

        {/* Category Filter */}
        <div className="flex gap-2 overflow-x-auto pb-2">
          {categories.map(category => (
            <Badge key={category} variant="outline" className="whitespace-nowrap cursor-pointer hover:bg-primary hover:text-primary-foreground">
              {category}
            </Badge>
          ))}
        </div>

        {/* Posts */}
        <div className="space-y-4">
          {posts.map(post => (
            <Card key={post.id} className="p-4 border-border/50">
              <div className="flex items-start gap-3">
                <Avatar>
                  <AvatarFallback className="bg-primary text-primary-foreground">
                    {post.author.charAt(0)}
                  </AvatarFallback>
                </Avatar>
                
                <div className="flex-1">
                  <div className="flex items-center gap-2 mb-2">
                    <span className="font-medium text-foreground">{post.author}</span>
                    <Badge variant="outline" className="text-xs">{post.category}</Badge>
                    <div className="flex items-center gap-1 text-success">
                      <Coins className="h-3 w-3" />
                      <span className="text-xs font-medium">+{post.agriCreds}</span>
                    </div>
                  </div>
                  
                  <p className="text-sm text-muted-foreground mb-2">
                    {post.location} ‚Ä¢ {post.time}
                  </p>
                  
                  <p className="text-foreground mb-3">{post.content}</p>
                  
                  {post.image && (
                    <div className="mb-3">
                      <div className="w-full h-32 bg-muted rounded-lg flex items-center justify-center text-4xl">
                        {post.image}
                      </div>
                    </div>
                  )}
                  
                  <div className="flex items-center gap-4">
                    <Button 
                      variant="ghost" 
                      size="sm" 
                      onClick={() => handleLike(post.id)}
                      className="text-muted-foreground hover:text-red-500"
                    >
                      <Heart className="h-4 w-4 mr-1" />
                      {post.likes}
                    </Button>
                    
                    <Button variant="ghost" size="sm" className="text-muted-foreground">
                      <MessageCircle className="h-4 w-4 mr-1" />
                      {post.comments}
                    </Button>
                    
                    <Button variant="ghost" size="sm" className="text-muted-foreground">
                      <Share2 className="h-4 w-4 mr-1" />
                      ‡§∏‡§æ‡§ù‡§æ ‡§ï‡§∞‡•á‡§Ç
                    </Button>
                  </div>
                </div>
              </div>
            </Card>
          ))}
        </div>
      </div>
    </div>
  );
};

export default Community;